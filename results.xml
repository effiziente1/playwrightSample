<testsuites id="" name="" tests="50" failures="1" skipped="3" errors="0" time="158.75851699999998">
<testsuite name="Fixture-LambdaTest/loginLambdaTestFixture.spec.ts" timestamp="2025-02-13T05:38:27.488Z" hostname="chrome:latest:MacOS Catalina@lambdatest" tests="1" failures="0" skipped="0" time="37.507" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="Fixture-LambdaTest/loginLambdaTestFixture.spec.ts" time="37.507">
<properties>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Fixture-LambdaTest/loginLambdaTestFixture.spec.ts" timestamp="2025-02-13T05:38:27.488Z" hostname="chrome:latest:Windows 10@lambdatest" tests="1" failures="0" skipped="0" time="11.486" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="Fixture-LambdaTest/loginLambdaTestFixture.spec.ts" time="11.486">
<properties>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="AI/login.spec.ts" timestamp="2025-02-13T05:38:27.488Z" hostname="desktop-chromium" tests="1" failures="1" skipped="0" time="2.913" errors="0">
<testcase name="AI Zero Step › Should show dashboard after login" classname="AI/login.spec.ts" time="2.913">
<failure message="login.spec.ts:7:9 Should show dashboard after login" type="FAILURE">
<![CDATA[  [desktop-chromium] › AI/login.spec.ts:7:9 › AI Zero Step › Should show dashboard after login @AI_Zero_Step 

    "zerostep.error 'Account usage limit reached'. Version:v0.1.5 TaskId:0194fdd1-030c-77a6-a947-c45cd37e4172"

    attachment #3: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results/AI-login-AI-Zero-Step-Should-show-dashboard-after-login-desktop-chromium/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #4: video (video/webm) ──────────────────────────────────────────────────────────────
    test-results/AI-login-AI-Zero-Step-Should-show-dashboard-after-login-desktop-chromium/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #5: trace (application/zip) ─────────────────────────────────────────────────────────
    test-results/AI-login-AI-Zero-Step-Should-show-dashboard-after-login-desktop-chromium/trace.zip
    Usage:

        npx playwright show-trace test-results/AI-login-AI-Zero-Step-Should-show-dashboard-after-login-desktop-chromium/trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────

    Retry #1 ───────────────────────────────────────────────────────────────────────────────────────

    "zerostep.error 'Account usage limit reached'. Version:v0.1.5 TaskId:0194fdd1-0ba6-7258-a9da-0dfb51b98f39"

    attachment #3: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results/AI-login-AI-Zero-Step-Should-show-dashboard-after-login-desktop-chromium-retry1/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #4: video (video/webm) ──────────────────────────────────────────────────────────────
    test-results/AI-login-AI-Zero-Step-Should-show-dashboard-after-login-desktop-chromium-retry1/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #5: trace (application/zip) ─────────────────────────────────────────────────────────
    test-results/AI-login-AI-Zero-Step-Should-show-dashboard-after-login-desktop-chromium-retry1/trace.zip
    Usage:

        npx playwright show-trace test-results/AI-login-AI-Zero-Step-Should-show-dashboard-after-login-desktop-chromium-retry1/trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/AI-login-AI-Zero-Step-Should-show-dashboard-after-login-desktop-chromium/test-failed-1.png]]

[[ATTACHMENT|../test-results/AI-login-AI-Zero-Step-Should-show-dashboard-after-login-desktop-chromium/video.webm]]

[[ATTACHMENT|../test-results/AI-login-AI-Zero-Step-Should-show-dashboard-after-login-desktop-chromium/trace.zip]]

[[ATTACHMENT|../test-results/AI-login-AI-Zero-Step-Should-show-dashboard-after-login-desktop-chromium-retry1/test-failed-1.png]]

[[ATTACHMENT|../test-results/AI-login-AI-Zero-Step-Should-show-dashboard-after-login-desktop-chromium-retry1/video.webm]]

[[ATTACHMENT|../test-results/AI-login-AI-Zero-Step-Should-show-dashboard-after-login-desktop-chromium-retry1/trace.zip]]
]]>
</system-out>
<system-err>
<![CDATA[zerostep.error 'Account usage limit reached'. Version:v0.1.5 TaskId:0194fdd1-030c-77a6-a947-c45cd37e4172
zerostep.error 'Account usage limit reached'. Version:v0.1.5 TaskId:0194fdd1-0ba6-7258-a9da-0dfb51b98f39
]]>
</system-err>
</testcase>
</testsuite>
<testsuite name="Api/addToCart.spec.ts" timestamp="2025-02-13T05:38:27.488Z" hostname="desktop-chromium" tests="1" failures="0" skipped="0" time="12.891" errors="0">
<testcase name="WebdriverIO Shop › Should add an item to the cart" classname="Api/addToCart.spec.ts" time="12.891">
<properties>
<property name="Go To" value="Go to: &quot;https://shop.webdriver.io&quot;">
</property>
<property name="Link" value="Click: &quot;Shop All&quot;">
</property>
<property name="Step" value="Click in the product: &quot;Cuffed Beanie&quot;">
</property>
<property name="Select" value="On &quot;Color&quot; select any option">
</property>
<property name="Select" value="On &quot;Color&quot; select the option White">
</property>
<property name="Step" value="Select any available Size">
</property>
<property name="Step" value="Get the product price">
</property>
<property name="Button" value="Click: &quot; 
		Add to Cart
		 
	$15.50
&quot;">
</property>
<property name="Assert" value="There is one item in the bag">
</property>
<property name="Button" value="Click: &quot;
 
				1
			 
				items
			&quot;">
</property>
<property name="Assert" value="The name of the item in the cart is: &quot;Cuffed Beanie&quot;">
</property>
<property name="Assert" value="The price of the item in the cart is: &quot;$15.50&quot;">
</property>
<property name="Assert" value="The subtotal is: &quot;$15.50&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Api/servers.spec.ts" timestamp="2025-02-13T05:38:27.488Z" hostname="desktop-chromium" tests="2" failures="0" skipped="0" time="7.557" errors="0">
<testcase name="Servers › Should add a server" classname="Api/servers.spec.ts" time="3.914">
<properties>
<property name="Description" value="An admin user can add a server">
</property>
<property name="Pre Condition" value="A valid admin username and password is logged">
</property>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="Post Condition" value="Delete server with the key: &quot;705738&quot; if exists">
</property>
<property name="Button" value="Click: &quot;Add&quot;">
</property>
<property name="InputText" value="Fill &quot;Key:&quot; with the value: &quot;705738&quot;">
</property>
<property name="InputText" value="Fill &quot;Name:&quot; with the value: &quot;Torp and Sons&quot;">
</property>
<property name="InputText" value="Fill &quot;Url:&quot; with the value: &quot;https://last-cafe.net/&quot;">
</property>
<property name="Step" value="Save server and return server id from api">
</property>
<property name="Button" value="Click: &quot;Save&quot;">
</property>
<property name="Assert" value="Success message is visible">
</property>
<property name="Assert" value="Server id should be a number greater than 1">
</property>
<property name="Assert" value="Server with the key: &quot;705738&quot; exists in the table">
</property>
<property name="Assert" value="The server name for the key: &quot;705738&quot; is: &quot;Torp and Sons&quot;">
</property>
<property name="Assert" value="The server url for the key: &quot;705738&quot; is: &quot;https://last-cafe.net/&quot;">
</property>
<property name="Post Condition" value="Delete the server with API request">
</property>
</properties>
</testcase>
<testcase name="Servers › Should edit a server" classname="Api/servers.spec.ts" time="3.643">
<properties>
<property name="Description" value="An admin user can edit a server">
</property>
<property name="Pre Condition" value="A valid admin username and password is logged">
</property>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="Step" value="Create server with API">
</property>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="InputText" value="Fill &quot;key:&quot; with the value: &quot;550709&quot;">
</property>
<property name="InputText" value="Fill &quot;Name:&quot; with the value: &quot;Leuschke Inc&quot;">
</property>
<property name="InputText" value="Fill &quot;Url:&quot; with the value: &quot;https://urban-behest.biz/&quot;">
</property>
<property name="Button" value="Click: &quot;Save&quot;">
</property>
<property name="Assert" value="Success message is visible">
</property>
<property name="Assert" value="Server with the key: &quot;550709&quot; exists in the table">
</property>
<property name="Assert" value="The server name for the key: &quot;550709&quot; is: &quot;Leuschke Inc&quot;">
</property>
<property name="Assert" value="The server url for the key: &quot;550709&quot; is: &quot;https://urban-behest.biz/&quot;">
</property>
<property name="Post Condition" value="Delete the server with API request">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Basic/login.spec.ts" timestamp="2025-02-13T05:38:27.488Z" hostname="desktop-chromium" tests="1" failures="0" skipped="0" time="0.664" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="Basic/login.spec.ts" time="0.664">
<properties>
<property name="Description" value="Login with valid user on sauce demo">
</property>
<property name="Pre Condition" value="A valid username and password">
</property>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page is equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Basic/menu.spec.ts" timestamp="2025-02-13T05:38:27.488Z" hostname="desktop-chromium" tests="2" failures="0" skipped="0" time="28.033" errors="0">
<testcase name="Normal user › Should returns user menu" classname="Basic/menu.spec.ts" time="14.138">
<properties>
<property name="Description" value="Login to effiziente demo with a normal user, the user will see the menu for normal users">
</property>
<property name="Pre Condition" value="A valid normal user">
</property>
<property name="Go To" value="Go to: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PrimeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu are equal to: &quot;AccountsReceivable,Config&quot;">
</property>
</properties>
</testcase>
<testcase name="Admin user › Should returns admin menu" classname="Basic/menu.spec.ts" time="13.895">
<properties>
<property name="Description" value="Login to effiziente demo with a admin user, the user will see the menu for admin users">
</property>
<property name="Pre Condition" value="A valid admin user">
</property>
<property name="Go To" value="Go to: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PrimeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu are equal to: &quot;AccountsReceivable,Security,Config&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Basic/parameterized.spec.ts" timestamp="2025-02-13T05:38:27.488Z" hostname="desktop-chromium" tests="2" failures="0" skipped="0" time="1.588" errors="0">
<testcase name="Login with Parameters › Login with &quot;standard_user&quot; from parameters will load inventory page" classname="Basic/parameterized.spec.ts" time="0.759">
<properties>
<property name="Description" value="Login with valid user on Sauce Demo">
</property>
<property name="Pre Condition" value="A valid username and password">
</property>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page is equal to: https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
<testcase name="Login with Parameters › Login with &quot;visual_user&quot; from parameters will load inventory page" classname="Basic/parameterized.spec.ts" time="0.829">
<properties>
<property name="Description" value="Login with valid user on Sauce Demo">
</property>
<property name="Pre Condition" value="A valid username and password">
</property>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;visual_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page is equal to: https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Excel/exportServers.spec.ts" timestamp="2025-02-13T05:38:27.488Z" hostname="desktop-chromium" tests="1" failures="0" skipped="0" time="2.328" errors="0">
<testcase name="Servers › Should export servers to excel" classname="Excel/exportServers.spec.ts" time="2.328">
<properties>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="ButtonExcel" value="Click: &quot;Export to Excel&quot;">
</property>
<property name="Assert" value="The excel file rows are equal to the grid rows">
</property>
</properties>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/Excel-exportServers-Servers-Should-export-servers-to-excel-desktop-chromium/attachments/servers-xlsx-b45414d1440b649c23868d9b19e0f22e5f012826.xlsx]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="Fixture-LambdaTest/loginLambdaTestFixture.spec.ts" timestamp="2025-02-13T05:38:27.488Z" hostname="desktop-chromium" tests="1" failures="0" skipped="0" time="0.697" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="Fixture-LambdaTest/loginLambdaTestFixture.spec.ts" time="0.697">
<properties>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="LocaleGeo/bingMaps.spec.ts" timestamp="2025-02-13T05:38:27.488Z" hostname="desktop-chromium" tests="1" failures="0" skipped="0" time="5.564" errors="0">
<testcase name="Geo Location Test › The bing maps is located to munich" classname="LocaleGeo/bingMaps.spec.ts" time="5.564">
<properties>
<property name="Go To" value="Go to: &quot;https://www.bing.com/maps&quot;">
</property>
<property name="Button" value="Click: &quot;Locate me&quot;">
</property>
<property name="Button" value="Check if the button is visible">
</property>
<property name="Button" value="Click: &quot;Expand/Collapse Geochain&quot;">
</property>
<property name="Assert" value="Geo name is equal to: &quot;GermanyBavariaMunich (District)&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="LocaleGeo/searchLocale.spec.ts" timestamp="2025-02-13T05:38:27.488Z" hostname="desktop-chromium" tests="1" failures="0" skipped="0" time="1.355" errors="0">
<testcase name="Locale translations › Should display correct translations for specified locale and timezone" classname="LocaleGeo/searchLocale.spec.ts" time="1.355">
<properties>
<property name="Go To" value="Go to: &quot;https://www.google.com&quot;">
</property>
<property name="Assert" value="Search button text is equal to: &quot;Buscar con Google&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Synthetic/login.spec.ts" timestamp="2025-02-13T05:38:27.488Z" hostname="desktop-chromium" tests="1" failures="0" skipped="0" time="3.327" errors="0">
<testcase name="Synthetic login testing › Should show dashboard" classname="Synthetic/login.spec.ts" time="3.327">
</testcase>
</testsuite>
<testsuite name="Synthetic/menu.spec.ts" timestamp="2025-02-13T05:38:27.488Z" hostname="desktop-chromium" tests="1" failures="0" skipped="0" time="3.473" errors="0">
<testcase name="Synthetic testing › Should show dashboard" classname="Synthetic/menu.spec.ts" time="3.473">
<properties>
<property name="Navigation" value="Go to: &quot;https://effizientedemo.azurewebsites.net&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="VisualTesting/dashboard.spec.ts" timestamp="2025-02-13T05:38:27.488Z" hostname="desktop-chromium" tests="1" failures="0" skipped="0" time="3.345" errors="0">
<testcase name="Check Dashboard › Should show dashboard" classname="VisualTesting/dashboard.spec.ts" time="3.345">
<properties>
<property name="Mock" value="Modify the summary with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Sumary Expiration&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 delay&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 total&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 type&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 1&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 2&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 3&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 To Expire&quot; with fixed data">
</property>
<property name="Go To" value="Go to: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="Go To" value="Wait to charts are visible">
</property>
<property name="Step" value="Compare snapshot: dashboard.png with maxDiffPixelsRatio: 0.1">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="AI/login.spec.ts" timestamp="2025-02-13T05:38:27.488Z" hostname="desktop-firefox" tests="1" failures="0" skipped="1" time="1.134" errors="0">
<testcase name="AI Zero Step › Should show dashboard after login" classname="AI/login.spec.ts" time="1.134">
<properties>
<property name="skip" value="Zero Steps only works in chromium">
</property>
</properties>
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="Api/addToCart.spec.ts" timestamp="2025-02-13T05:38:27.488Z" hostname="desktop-firefox" tests="1" failures="0" skipped="0" time="14.38" errors="0">
<testcase name="WebdriverIO Shop › Should add an item to the cart" classname="Api/addToCart.spec.ts" time="14.38">
<properties>
<property name="Go To" value="Go to: &quot;https://shop.webdriver.io&quot;">
</property>
<property name="Link" value="Click: &quot;Shop All&quot;">
</property>
<property name="Step" value="Click in the product: &quot;WebdriverIO T-Shirt - Robot Shining&quot;">
</property>
<property name="Select" value="On &quot;Color&quot; select any option">
</property>
<property name="Select" value="On &quot;Color&quot; select the option Asphalt">
</property>
<property name="Step" value="Select any available Size">
</property>
<property name="Select" value="On &quot;Size&quot; select any option">
</property>
<property name="Select" value="On &quot;Size&quot; select the option 2XL">
</property>
<property name="Step" value="Get the product price">
</property>
<property name="Button" value="Click: &quot; 
		Add to Cart
		 
	$25.00
&quot;">
</property>
<property name="Assert" value="There is one item in the bag">
</property>
<property name="Button" value="Click: &quot;
 
				1
			 
				items
			&quot;">
</property>
<property name="Assert" value="The name of the item in the cart is: &quot;WebdriverIO T-Shirt - Robot Shining&quot;">
</property>
<property name="Assert" value="The price of the item in the cart is: &quot;$25.00&quot;">
</property>
<property name="Assert" value="The subtotal is: &quot;$25.00&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Api/servers.spec.ts" timestamp="2025-02-13T05:38:27.488Z" hostname="desktop-firefox" tests="2" failures="0" skipped="0" time="9.886" errors="0">
<testcase name="Servers › Should add a server" classname="Api/servers.spec.ts" time="4.815">
<properties>
<property name="Description" value="An admin user can add a server">
</property>
<property name="Pre Condition" value="A valid admin username and password is logged">
</property>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="Post Condition" value="Delete server with the key: &quot;486528&quot; if exists">
</property>
<property name="Button" value="Click: &quot;Add&quot;">
</property>
<property name="InputText" value="Fill &quot;Key:&quot; with the value: &quot;486528&quot;">
</property>
<property name="InputText" value="Fill &quot;Name:&quot; with the value: &quot;Bogisich - Abshire&quot;">
</property>
<property name="InputText" value="Fill &quot;Url:&quot; with the value: &quot;https://wide-eyed-custody.biz/&quot;">
</property>
<property name="Step" value="Save server and return server id from api">
</property>
<property name="Button" value="Click: &quot;Save&quot;">
</property>
<property name="Assert" value="Success message is visible">
</property>
<property name="Assert" value="Server id should be a number greater than 1">
</property>
<property name="Assert" value="Server with the key: &quot;486528&quot; exists in the table">
</property>
<property name="Assert" value="The server name for the key: &quot;486528&quot; is: &quot;Bogisich - Abshire&quot;">
</property>
<property name="Assert" value="The server url for the key: &quot;486528&quot; is: &quot;https://wide-eyed-custody.biz/&quot;">
</property>
<property name="Post Condition" value="Delete the server with API request">
</property>
</properties>
</testcase>
<testcase name="Servers › Should edit a server" classname="Api/servers.spec.ts" time="5.071">
<properties>
<property name="Description" value="An admin user can edit a server">
</property>
<property name="Pre Condition" value="A valid admin username and password is logged">
</property>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="Step" value="Create server with API">
</property>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="InputText" value="Fill &quot;key:&quot; with the value: &quot;118388&quot;">
</property>
<property name="InputText" value="Fill &quot;Name:&quot; with the value: &quot;Little, Veum and Considine&quot;">
</property>
<property name="InputText" value="Fill &quot;Url:&quot; with the value: &quot;https://filthy-kinase.net&quot;">
</property>
<property name="Button" value="Click: &quot;Save&quot;">
</property>
<property name="Assert" value="Success message is visible">
</property>
<property name="Assert" value="Server with the key: &quot;118388&quot; exists in the table">
</property>
<property name="Assert" value="The server name for the key: &quot;118388&quot; is: &quot;Little, Veum and Considine&quot;">
</property>
<property name="Assert" value="The server url for the key: &quot;118388&quot; is: &quot;https://filthy-kinase.net&quot;">
</property>
<property name="Post Condition" value="Delete the server with API request">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Basic/login.spec.ts" timestamp="2025-02-13T05:38:27.488Z" hostname="desktop-firefox" tests="1" failures="0" skipped="0" time="0.913" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="Basic/login.spec.ts" time="0.913">
<properties>
<property name="Description" value="Login with valid user on sauce demo">
</property>
<property name="Pre Condition" value="A valid username and password">
</property>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page is equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Basic/menu.spec.ts" timestamp="2025-02-13T05:38:27.488Z" hostname="desktop-firefox" tests="2" failures="0" skipped="0" time="6.198" errors="0">
<testcase name="Normal user › Should returns user menu" classname="Basic/menu.spec.ts" time="2.868">
<properties>
<property name="Description" value="Login to effiziente demo with a normal user, the user will see the menu for normal users">
</property>
<property name="Pre Condition" value="A valid normal user">
</property>
<property name="Go To" value="Go to: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PrimeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu are equal to: &quot;AccountsReceivable,Config&quot;">
</property>
</properties>
</testcase>
<testcase name="Admin user › Should returns admin menu" classname="Basic/menu.spec.ts" time="3.33">
<properties>
<property name="Description" value="Login to effiziente demo with a admin user, the user will see the menu for admin users">
</property>
<property name="Pre Condition" value="A valid admin user">
</property>
<property name="Go To" value="Go to: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PrimeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu are equal to: &quot;AccountsReceivable,Security,Config&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Basic/parameterized.spec.ts" timestamp="2025-02-13T05:38:27.488Z" hostname="desktop-firefox" tests="2" failures="0" skipped="0" time="2.371" errors="0">
<testcase name="Login with Parameters › Login with &quot;standard_user&quot; from parameters will load inventory page" classname="Basic/parameterized.spec.ts" time="1.219">
<properties>
<property name="Description" value="Login with valid user on Sauce Demo">
</property>
<property name="Pre Condition" value="A valid username and password">
</property>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page is equal to: https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
<testcase name="Login with Parameters › Login with &quot;visual_user&quot; from parameters will load inventory page" classname="Basic/parameterized.spec.ts" time="1.152">
<properties>
<property name="Description" value="Login with valid user on Sauce Demo">
</property>
<property name="Pre Condition" value="A valid username and password">
</property>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;visual_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page is equal to: https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Excel/exportServers.spec.ts" timestamp="2025-02-13T05:38:27.488Z" hostname="desktop-firefox" tests="1" failures="0" skipped="0" time="3.111" errors="0">
<testcase name="Servers › Should export servers to excel" classname="Excel/exportServers.spec.ts" time="3.111">
<properties>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="ButtonExcel" value="Click: &quot;Export to Excel&quot;">
</property>
<property name="Assert" value="The excel file rows are equal to the grid rows">
</property>
</properties>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/Excel-exportServers-Servers-Should-export-servers-to-excel-desktop-firefox/attachments/servers-xlsx-b45414d1440b649c23868d9b19e0f22e5f012826.xlsx]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="Fixture-LambdaTest/loginLambdaTestFixture.spec.ts" timestamp="2025-02-13T05:38:27.488Z" hostname="desktop-firefox" tests="1" failures="0" skipped="0" time="0.687" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="Fixture-LambdaTest/loginLambdaTestFixture.spec.ts" time="0.687">
<properties>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="LocaleGeo/bingMaps.spec.ts" timestamp="2025-02-13T05:38:27.488Z" hostname="desktop-firefox" tests="1" failures="0" skipped="1" time="0.309" errors="0">
<testcase name="Geo Location Test › The bing maps is located to munich" classname="LocaleGeo/bingMaps.spec.ts" time="0.309">
<properties>
<property name="skip" value="Geolocation not work in firefox">
</property>
</properties>
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="LocaleGeo/searchLocale.spec.ts" timestamp="2025-02-13T05:38:27.488Z" hostname="desktop-firefox" tests="1" failures="0" skipped="0" time="1.736" errors="0">
<testcase name="Locale translations › Should display correct translations for specified locale and timezone" classname="LocaleGeo/searchLocale.spec.ts" time="1.736">
<properties>
<property name="Go To" value="Go to: &quot;https://www.google.com&quot;">
</property>
<property name="Assert" value="Search button text is equal to: &quot;Buscar con Google&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Synthetic/login.spec.ts" timestamp="2025-02-13T05:38:27.488Z" hostname="desktop-firefox" tests="1" failures="0" skipped="0" time="3.305" errors="0">
<testcase name="Synthetic login testing › Should show dashboard" classname="Synthetic/login.spec.ts" time="3.305">
</testcase>
</testsuite>
<testsuite name="Synthetic/menu.spec.ts" timestamp="2025-02-13T05:38:27.488Z" hostname="desktop-firefox" tests="1" failures="0" skipped="0" time="4.943" errors="0">
<testcase name="Synthetic testing › Should show dashboard" classname="Synthetic/menu.spec.ts" time="4.943">
<properties>
<property name="Navigation" value="Go to: &quot;https://effizientedemo.azurewebsites.net&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="VisualTesting/dashboard.spec.ts" timestamp="2025-02-13T05:38:27.488Z" hostname="desktop-firefox" tests="1" failures="0" skipped="0" time="2.99" errors="0">
<testcase name="Check Dashboard › Should show dashboard" classname="VisualTesting/dashboard.spec.ts" time="2.99">
<properties>
<property name="Mock" value="Modify the summary with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Sumary Expiration&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 delay&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 total&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 type&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 1&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 2&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 3&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 To Expire&quot; with fixed data">
</property>
<property name="Go To" value="Go to: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="Go To" value="Wait to charts are visible">
</property>
<property name="Step" value="Compare snapshot: dashboard.png with maxDiffPixelsRatio: 0.1">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="AI/login.spec.ts" timestamp="2025-02-13T05:38:27.488Z" hostname="desktop-webkit" tests="1" failures="0" skipped="1" time="2.018" errors="0">
<testcase name="AI Zero Step › Should show dashboard after login" classname="AI/login.spec.ts" time="2.018">
<properties>
<property name="skip" value="Zero Steps only works in chromium">
</property>
</properties>
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="Api/addToCart.spec.ts" timestamp="2025-02-13T05:38:27.488Z" hostname="desktop-webkit" tests="1" failures="0" skipped="0" time="44.571" errors="0">
<testcase name="WebdriverIO Shop › Should add an item to the cart" classname="Api/addToCart.spec.ts" time="44.571">
<properties>
<property name="Go To" value="Go to: &quot;https://shop.webdriver.io&quot;">
</property>
<property name="Link" value="Click: &quot;Shop All&quot;">
</property>
<property name="Step" value="Click in the product: &quot;Cuffed Beanie&quot;">
</property>
<property name="Select" value="On &quot;Color&quot; select any option">
</property>
<property name="Select" value="On &quot;Color&quot; select the option White">
</property>
<property name="Step" value="Select any available Size">
</property>
<property name="Step" value="Get the product price">
</property>
<property name="Button" value="Click: &quot; 
		Add to Cart
		 
	$15.50
&quot;">
</property>
<property name="Assert" value="There is one item in the bag">
</property>
<property name="Button" value="Click: &quot;
 
				1
			 
				items
			&quot;">
</property>
<property name="Assert" value="The name of the item in the cart is: &quot;Cuffed Beanie&quot;">
</property>
<property name="Assert" value="The price of the item in the cart is: &quot;$15.50&quot;">
</property>
<property name="Assert" value="The subtotal is: &quot;$15.50&quot;">
</property>
</properties>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/Api-addToCart-WebdriverIO--609ad-uld-add-an-item-to-the-cart-desktop-webkit/test-failed-1.png]]

[[ATTACHMENT|../test-results/Api-addToCart-WebdriverIO--609ad-uld-add-an-item-to-the-cart-desktop-webkit/video.webm]]

[[ATTACHMENT|../test-results/Api-addToCart-WebdriverIO--609ad-uld-add-an-item-to-the-cart-desktop-webkit/trace.zip]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="Api/servers.spec.ts" timestamp="2025-02-13T05:38:27.488Z" hostname="desktop-webkit" tests="2" failures="0" skipped="0" time="13.161" errors="0">
<testcase name="Servers › Should add a server" classname="Api/servers.spec.ts" time="6.088">
<properties>
<property name="Description" value="An admin user can add a server">
</property>
<property name="Pre Condition" value="A valid admin username and password is logged">
</property>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="Post Condition" value="Delete server with the key: &quot;660184&quot; if exists">
</property>
<property name="Button" value="Click: &quot;Add&quot;">
</property>
<property name="InputText" value="Fill &quot;Key:&quot; with the value: &quot;660184&quot;">
</property>
<property name="InputText" value="Fill &quot;Name:&quot; with the value: &quot;Hoeger - Batz&quot;">
</property>
<property name="InputText" value="Fill &quot;Url:&quot; with the value: &quot;https://useless-completion.net/&quot;">
</property>
<property name="Step" value="Save server and return server id from api">
</property>
<property name="Button" value="Click: &quot;Save&quot;">
</property>
<property name="Assert" value="Success message is visible">
</property>
<property name="Assert" value="Server id should be a number greater than 1">
</property>
<property name="Assert" value="Server with the key: &quot;660184&quot; exists in the table">
</property>
<property name="Assert" value="The server name for the key: &quot;660184&quot; is: &quot;Hoeger - Batz&quot;">
</property>
<property name="Assert" value="The server url for the key: &quot;660184&quot; is: &quot;https://useless-completion.net/&quot;">
</property>
<property name="Post Condition" value="Delete the server with API request">
</property>
</properties>
</testcase>
<testcase name="Servers › Should edit a server" classname="Api/servers.spec.ts" time="7.073">
<properties>
<property name="Description" value="An admin user can edit a server">
</property>
<property name="Pre Condition" value="A valid admin username and password is logged">
</property>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="Step" value="Create server with API">
</property>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="InputText" value="Fill &quot;key:&quot; with the value: &quot;895088&quot;">
</property>
<property name="InputText" value="Fill &quot;Name:&quot; with the value: &quot;Schinner, Lehner and Kovacek&quot;">
</property>
<property name="InputText" value="Fill &quot;Url:&quot; with the value: &quot;https://honored-sticker.com/&quot;">
</property>
<property name="Button" value="Click: &quot;Save&quot;">
</property>
<property name="Assert" value="Success message is visible">
</property>
<property name="Assert" value="Server with the key: &quot;895088&quot; exists in the table">
</property>
<property name="Assert" value="The server name for the key: &quot;895088&quot; is: &quot;Schinner, Lehner and Kovacek&quot;">
</property>
<property name="Assert" value="The server url for the key: &quot;895088&quot; is: &quot;https://honored-sticker.com/&quot;">
</property>
<property name="Post Condition" value="Delete the server with API request">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Basic/login.spec.ts" timestamp="2025-02-13T05:38:27.488Z" hostname="desktop-webkit" tests="1" failures="0" skipped="0" time="1.793" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="Basic/login.spec.ts" time="1.793">
<properties>
<property name="Description" value="Login with valid user on sauce demo">
</property>
<property name="Pre Condition" value="A valid username and password">
</property>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page is equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Basic/menu.spec.ts" timestamp="2025-02-13T05:38:27.488Z" hostname="desktop-webkit" tests="2" failures="0" skipped="0" time="9.672" errors="0">
<testcase name="Normal user › Should returns user menu" classname="Basic/menu.spec.ts" time="4.898">
<properties>
<property name="Description" value="Login to effiziente demo with a normal user, the user will see the menu for normal users">
</property>
<property name="Pre Condition" value="A valid normal user">
</property>
<property name="Go To" value="Go to: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PrimeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu are equal to: &quot;AccountsReceivable,Config&quot;">
</property>
</properties>
</testcase>
<testcase name="Admin user › Should returns admin menu" classname="Basic/menu.spec.ts" time="4.774">
<properties>
<property name="Description" value="Login to effiziente demo with a admin user, the user will see the menu for admin users">
</property>
<property name="Pre Condition" value="A valid admin user">
</property>
<property name="Go To" value="Go to: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PrimeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu are equal to: &quot;AccountsReceivable,Security,Config&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Basic/parameterized.spec.ts" timestamp="2025-02-13T05:38:27.488Z" hostname="desktop-webkit" tests="2" failures="0" skipped="0" time="2.787" errors="0">
<testcase name="Login with Parameters › Login with &quot;standard_user&quot; from parameters will load inventory page" classname="Basic/parameterized.spec.ts" time="1.416">
<properties>
<property name="Description" value="Login with valid user on Sauce Demo">
</property>
<property name="Pre Condition" value="A valid username and password">
</property>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page is equal to: https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
<testcase name="Login with Parameters › Login with &quot;visual_user&quot; from parameters will load inventory page" classname="Basic/parameterized.spec.ts" time="1.371">
<properties>
<property name="Description" value="Login with valid user on Sauce Demo">
</property>
<property name="Pre Condition" value="A valid username and password">
</property>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;visual_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page is equal to: https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Excel/exportServers.spec.ts" timestamp="2025-02-13T05:38:27.488Z" hostname="desktop-webkit" tests="1" failures="0" skipped="0" time="3.917" errors="0">
<testcase name="Servers › Should export servers to excel" classname="Excel/exportServers.spec.ts" time="3.917">
<properties>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&apos;&quot;">
</property>
<property name="ButtonExcel" value="Click: &quot;Export to Excel&quot;">
</property>
<property name="Assert" value="The excel file rows are equal to the grid rows">
</property>
</properties>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/Excel-exportServers-Servers-Should-export-servers-to-excel-desktop-webkit/attachments/servers-xlsx-b45414d1440b649c23868d9b19e0f22e5f012826.xlsx]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="Fixture-LambdaTest/loginLambdaTestFixture.spec.ts" timestamp="2025-02-13T05:38:27.488Z" hostname="desktop-webkit" tests="1" failures="0" skipped="0" time="0.808" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="Fixture-LambdaTest/loginLambdaTestFixture.spec.ts" time="0.808">
<properties>
<property name="Go To" value="Go to: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill &quot;Password&quot; with value: *****">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="LocaleGeo/bingMaps.spec.ts" timestamp="2025-02-13T05:38:27.488Z" hostname="desktop-webkit" tests="1" failures="0" skipped="0" time="15.007" errors="0">
<testcase name="Geo Location Test › The bing maps is located to munich" classname="LocaleGeo/bingMaps.spec.ts" time="15.007">
<properties>
<property name="Go To" value="Go to: &quot;https://www.bing.com/maps&quot;">
</property>
<property name="Button" value="Click: &quot;Locate me&quot;">
</property>
<property name="Button" value="Check if the button is visible">
</property>
<property name="Button" value="Click: &quot;Expand/Collapse Geochain&quot;">
</property>
<property name="Assert" value="Geo name is equal to: &quot;GermanyBavariaMunich (District)&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="LocaleGeo/searchLocale.spec.ts" timestamp="2025-02-13T05:38:27.488Z" hostname="desktop-webkit" tests="1" failures="0" skipped="0" time="1.952" errors="0">
<testcase name="Locale translations › Should display correct translations for specified locale and timezone" classname="LocaleGeo/searchLocale.spec.ts" time="1.952">
<properties>
<property name="Go To" value="Go to: &quot;https://www.google.com&quot;">
</property>
<property name="Assert" value="Search button text is equal to: &quot;Buscar con Google&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Synthetic/login.spec.ts" timestamp="2025-02-13T05:38:27.488Z" hostname="desktop-webkit" tests="1" failures="0" skipped="0" time="6.191" errors="0">
<testcase name="Synthetic login testing › Should show dashboard" classname="Synthetic/login.spec.ts" time="6.191">
</testcase>
</testsuite>
<testsuite name="Synthetic/menu.spec.ts" timestamp="2025-02-13T05:38:27.488Z" hostname="desktop-webkit" tests="1" failures="0" skipped="0" time="5.785" errors="0">
<testcase name="Synthetic testing › Should show dashboard" classname="Synthetic/menu.spec.ts" time="5.785">
<properties>
<property name="Navigation" value="Go to: &quot;https://effizientedemo.azurewebsites.net&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="VisualTesting/dashboard.spec.ts" timestamp="2025-02-13T05:38:27.488Z" hostname="desktop-webkit" tests="1" failures="0" skipped="0" time="5.192" errors="0">
<testcase name="Check Dashboard › Should show dashboard" classname="VisualTesting/dashboard.spec.ts" time="5.192">
<properties>
<property name="Mock" value="Modify the summary with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Sumary Expiration&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 delay&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 total&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 type&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 1&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 2&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 3&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 To Expire&quot; with fixed data">
</property>
<property name="Go To" value="Go to: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="Go To" value="Wait to charts are visible">
</property>
<property name="Step" value="Compare snapshot: dashboard.png with maxDiffPixelsRatio: 0.1">
</property>
</properties>
</testcase>
</testsuite>
</testsuites>